/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.cassandra.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Reprensents the SLA and FLA
 */
public class Agreement_parameters implements org.apache.thrift.TBase<Agreement_parameters, Agreement_parameters._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Agreement_parameters");

  private static final org.apache.thrift.protocol.TField TARDINESS_DEADLINE_FIELD_DESC = new org.apache.thrift.protocol.TField("tardiness_deadline", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField STALENESS_DEADLINE_FIELD_DESC = new org.apache.thrift.protocol.TField("staleness_deadline", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField QO_S_PREFERENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("QoS_preference", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField QUERY_WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("query_weight", org.apache.thrift.protocol.TType.DOUBLE, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new Agreement_parametersStandardSchemeFactory());
    schemes.put(TupleScheme.class, new Agreement_parametersTupleSchemeFactory());
  }

  public long tardiness_deadline; // required
  public long staleness_deadline; // required
  public double QoS_preference; // optional
  public double query_weight; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TARDINESS_DEADLINE((short)1, "tardiness_deadline"),
    STALENESS_DEADLINE((short)2, "staleness_deadline"),
    QO_S_PREFERENCE((short)3, "QoS_preference"),
    QUERY_WEIGHT((short)4, "query_weight");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TARDINESS_DEADLINE
          return TARDINESS_DEADLINE;
        case 2: // STALENESS_DEADLINE
          return STALENESS_DEADLINE;
        case 3: // QO_S_PREFERENCE
          return QO_S_PREFERENCE;
        case 4: // QUERY_WEIGHT
          return QUERY_WEIGHT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TARDINESS_DEADLINE_ISSET_ID = 0;
  private static final int __STALENESS_DEADLINE_ISSET_ID = 1;
  private static final int __QOS_PREFERENCE_ISSET_ID = 2;
  private static final int __QUERY_WEIGHT_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.QO_S_PREFERENCE,_Fields.QUERY_WEIGHT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TARDINESS_DEADLINE, new org.apache.thrift.meta_data.FieldMetaData("tardiness_deadline", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STALENESS_DEADLINE, new org.apache.thrift.meta_data.FieldMetaData("staleness_deadline", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.QO_S_PREFERENCE, new org.apache.thrift.meta_data.FieldMetaData("QoS_preference", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.QUERY_WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("query_weight", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Agreement_parameters.class, metaDataMap);
  }

  public Agreement_parameters() {
    this.tardiness_deadline = -1L;

    this.staleness_deadline = -1L;

    this.QoS_preference = (double)1;

    this.query_weight = (double)1;

  }

  public Agreement_parameters(
    long tardiness_deadline,
    long staleness_deadline)
  {
    this();
    this.tardiness_deadline = tardiness_deadline;
    setTardiness_deadlineIsSet(true);
    this.staleness_deadline = staleness_deadline;
    setStaleness_deadlineIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Agreement_parameters(Agreement_parameters other) {
    __isset_bitfield = other.__isset_bitfield;
    this.tardiness_deadline = other.tardiness_deadline;
    this.staleness_deadline = other.staleness_deadline;
    this.QoS_preference = other.QoS_preference;
    this.query_weight = other.query_weight;
  }

  public Agreement_parameters deepCopy() {
    return new Agreement_parameters(this);
  }

  @Override
  public void clear() {
    this.tardiness_deadline = -1L;

    this.staleness_deadline = -1L;

    this.QoS_preference = (double)1;

    this.query_weight = (double)1;

  }

  public long getTardiness_deadline() {
    return this.tardiness_deadline;
  }

  public Agreement_parameters setTardiness_deadline(long tardiness_deadline) {
    this.tardiness_deadline = tardiness_deadline;
    setTardiness_deadlineIsSet(true);
    return this;
  }

  public void unsetTardiness_deadline() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TARDINESS_DEADLINE_ISSET_ID);
  }

  /** Returns true if field tardiness_deadline is set (has been assigned a value) and false otherwise */
  public boolean isSetTardiness_deadline() {
    return EncodingUtils.testBit(__isset_bitfield, __TARDINESS_DEADLINE_ISSET_ID);
  }

  public void setTardiness_deadlineIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TARDINESS_DEADLINE_ISSET_ID, value);
  }

  public long getStaleness_deadline() {
    return this.staleness_deadline;
  }

  public Agreement_parameters setStaleness_deadline(long staleness_deadline) {
    this.staleness_deadline = staleness_deadline;
    setStaleness_deadlineIsSet(true);
    return this;
  }

  public void unsetStaleness_deadline() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STALENESS_DEADLINE_ISSET_ID);
  }

  /** Returns true if field staleness_deadline is set (has been assigned a value) and false otherwise */
  public boolean isSetStaleness_deadline() {
    return EncodingUtils.testBit(__isset_bitfield, __STALENESS_DEADLINE_ISSET_ID);
  }

  public void setStaleness_deadlineIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STALENESS_DEADLINE_ISSET_ID, value);
  }

  public double getQoS_preference() {
    return this.QoS_preference;
  }

  public Agreement_parameters setQoS_preference(double QoS_preference) {
    this.QoS_preference = QoS_preference;
    setQoS_preferenceIsSet(true);
    return this;
  }

  public void unsetQoS_preference() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QOS_PREFERENCE_ISSET_ID);
  }

  /** Returns true if field QoS_preference is set (has been assigned a value) and false otherwise */
  public boolean isSetQoS_preference() {
    return EncodingUtils.testBit(__isset_bitfield, __QOS_PREFERENCE_ISSET_ID);
  }

  public void setQoS_preferenceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QOS_PREFERENCE_ISSET_ID, value);
  }

  public double getQuery_weight() {
    return this.query_weight;
  }

  public Agreement_parameters setQuery_weight(double query_weight) {
    this.query_weight = query_weight;
    setQuery_weightIsSet(true);
    return this;
  }

  public void unsetQuery_weight() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QUERY_WEIGHT_ISSET_ID);
  }

  /** Returns true if field query_weight is set (has been assigned a value) and false otherwise */
  public boolean isSetQuery_weight() {
    return EncodingUtils.testBit(__isset_bitfield, __QUERY_WEIGHT_ISSET_ID);
  }

  public void setQuery_weightIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QUERY_WEIGHT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TARDINESS_DEADLINE:
      if (value == null) {
        unsetTardiness_deadline();
      } else {
        setTardiness_deadline((Long)value);
      }
      break;

    case STALENESS_DEADLINE:
      if (value == null) {
        unsetStaleness_deadline();
      } else {
        setStaleness_deadline((Long)value);
      }
      break;

    case QO_S_PREFERENCE:
      if (value == null) {
        unsetQoS_preference();
      } else {
        setQoS_preference((Double)value);
      }
      break;

    case QUERY_WEIGHT:
      if (value == null) {
        unsetQuery_weight();
      } else {
        setQuery_weight((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TARDINESS_DEADLINE:
      return Long.valueOf(getTardiness_deadline());

    case STALENESS_DEADLINE:
      return Long.valueOf(getStaleness_deadline());

    case QO_S_PREFERENCE:
      return Double.valueOf(getQoS_preference());

    case QUERY_WEIGHT:
      return Double.valueOf(getQuery_weight());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TARDINESS_DEADLINE:
      return isSetTardiness_deadline();
    case STALENESS_DEADLINE:
      return isSetStaleness_deadline();
    case QO_S_PREFERENCE:
      return isSetQoS_preference();
    case QUERY_WEIGHT:
      return isSetQuery_weight();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Agreement_parameters)
      return this.equals((Agreement_parameters)that);
    return false;
  }

  public boolean equals(Agreement_parameters that) {
    if (that == null)
      return false;

    boolean this_present_tardiness_deadline = true;
    boolean that_present_tardiness_deadline = true;
    if (this_present_tardiness_deadline || that_present_tardiness_deadline) {
      if (!(this_present_tardiness_deadline && that_present_tardiness_deadline))
        return false;
      if (this.tardiness_deadline != that.tardiness_deadline)
        return false;
    }

    boolean this_present_staleness_deadline = true;
    boolean that_present_staleness_deadline = true;
    if (this_present_staleness_deadline || that_present_staleness_deadline) {
      if (!(this_present_staleness_deadline && that_present_staleness_deadline))
        return false;
      if (this.staleness_deadline != that.staleness_deadline)
        return false;
    }

    boolean this_present_QoS_preference = true && this.isSetQoS_preference();
    boolean that_present_QoS_preference = true && that.isSetQoS_preference();
    if (this_present_QoS_preference || that_present_QoS_preference) {
      if (!(this_present_QoS_preference && that_present_QoS_preference))
        return false;
      if (this.QoS_preference != that.QoS_preference)
        return false;
    }

    boolean this_present_query_weight = true && this.isSetQuery_weight();
    boolean that_present_query_weight = true && that.isSetQuery_weight();
    if (this_present_query_weight || that_present_query_weight) {
      if (!(this_present_query_weight && that_present_query_weight))
        return false;
      if (this.query_weight != that.query_weight)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(Agreement_parameters other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    Agreement_parameters typedOther = (Agreement_parameters)other;

    lastComparison = Boolean.valueOf(isSetTardiness_deadline()).compareTo(typedOther.isSetTardiness_deadline());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTardiness_deadline()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tardiness_deadline, typedOther.tardiness_deadline);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStaleness_deadline()).compareTo(typedOther.isSetStaleness_deadline());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStaleness_deadline()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staleness_deadline, typedOther.staleness_deadline);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQoS_preference()).compareTo(typedOther.isSetQoS_preference());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQoS_preference()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.QoS_preference, typedOther.QoS_preference);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuery_weight()).compareTo(typedOther.isSetQuery_weight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery_weight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query_weight, typedOther.query_weight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Agreement_parameters(");
    boolean first = true;

    sb.append("tardiness_deadline:");
    sb.append(this.tardiness_deadline);
    first = false;
    if (!first) sb.append(", ");
    sb.append("staleness_deadline:");
    sb.append(this.staleness_deadline);
    first = false;
    if (isSetQoS_preference()) {
      if (!first) sb.append(", ");
      sb.append("QoS_preference:");
      sb.append(this.QoS_preference);
      first = false;
    }
    if (isSetQuery_weight()) {
      if (!first) sb.append(", ");
      sb.append("query_weight:");
      sb.append(this.query_weight);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'tardiness_deadline' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'staleness_deadline' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class Agreement_parametersStandardSchemeFactory implements SchemeFactory {
    public Agreement_parametersStandardScheme getScheme() {
      return new Agreement_parametersStandardScheme();
    }
  }

  private static class Agreement_parametersStandardScheme extends StandardScheme<Agreement_parameters> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Agreement_parameters struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TARDINESS_DEADLINE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tardiness_deadline = iprot.readI64();
              struct.setTardiness_deadlineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STALENESS_DEADLINE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.staleness_deadline = iprot.readI64();
              struct.setStaleness_deadlineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // QO_S_PREFERENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.QoS_preference = iprot.readDouble();
              struct.setQoS_preferenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // QUERY_WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.query_weight = iprot.readDouble();
              struct.setQuery_weightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetTardiness_deadline()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'tardiness_deadline' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetStaleness_deadline()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'staleness_deadline' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Agreement_parameters struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TARDINESS_DEADLINE_FIELD_DESC);
      oprot.writeI64(struct.tardiness_deadline);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STALENESS_DEADLINE_FIELD_DESC);
      oprot.writeI64(struct.staleness_deadline);
      oprot.writeFieldEnd();
      if (struct.isSetQoS_preference()) {
        oprot.writeFieldBegin(QO_S_PREFERENCE_FIELD_DESC);
        oprot.writeDouble(struct.QoS_preference);
        oprot.writeFieldEnd();
      }
      if (struct.isSetQuery_weight()) {
        oprot.writeFieldBegin(QUERY_WEIGHT_FIELD_DESC);
        oprot.writeDouble(struct.query_weight);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class Agreement_parametersTupleSchemeFactory implements SchemeFactory {
    public Agreement_parametersTupleScheme getScheme() {
      return new Agreement_parametersTupleScheme();
    }
  }

  private static class Agreement_parametersTupleScheme extends TupleScheme<Agreement_parameters> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Agreement_parameters struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI64(struct.tardiness_deadline);
      oprot.writeI64(struct.staleness_deadline);
      BitSet optionals = new BitSet();
      if (struct.isSetQoS_preference()) {
        optionals.set(0);
      }
      if (struct.isSetQuery_weight()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetQoS_preference()) {
        oprot.writeDouble(struct.QoS_preference);
      }
      if (struct.isSetQuery_weight()) {
        oprot.writeDouble(struct.query_weight);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Agreement_parameters struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.tardiness_deadline = iprot.readI64();
      struct.setTardiness_deadlineIsSet(true);
      struct.staleness_deadline = iprot.readI64();
      struct.setStaleness_deadlineIsSet(true);
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.QoS_preference = iprot.readDouble();
        struct.setQoS_preferenceIsSet(true);
      }
      if (incoming.get(1)) {
        struct.query_weight = iprot.readDouble();
        struct.setQuery_weightIsSet(true);
      }
    }
  }

}

